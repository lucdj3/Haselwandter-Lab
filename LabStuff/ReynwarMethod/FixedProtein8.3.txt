#define prodist (15) //distance of center of protein from edge of semicircle
#define prorad  (10) //radius of the circle that will represent the protein
#define proang  (45) //angle between z-axis and "polar" axis of protein
#define prohght (prorad*sin(pi*proang/180)) //height of the center of protein from x-y plane
#define contang (90) //angle of contact between protein and membrane

//start making values for circle of protein contacting the membrane
#define prox1 (prorad)
#define prox2 (prorad/2)
#define prox3 (-prox2)
#define prox4 (-prorad)
#define prox5 (-prox2)
#define prox6 (prox2)

#define yplane (sin(pi*proang/180)) //y-coefficient in a(y-prodist)+b(z-prohght)=0, plane parallel to base of protein
#define zplane (cos(pi*proang/180)) //z-coefficient in a(y-prodist)+b(z-prohght)=0, plane parallel to base of protein
//normal vector for above plane: (0,zplane,yplane)
//equation for line that goes up through center of protein: zplane(y-prodist)=yplane(z-prohght)


#define y2sqandz2sq (prorad^2-prox2^2) //y^2 + z^2 in the sphere's equation for 2nd point

//IF proang is 90, comment out this next line and uncomment y2sq=0 line
#define y2sq (y2sqandz2sq/(1+yplane^2/zplane^2)) //y^2 in sphere's equation for 2nd point
//#define y2sq (0)

//IF proang is 0, comment out this next line and uncomment z2sq=0 line
#define z2sq (y2sqandz2sq/(1+zplane^2/yplane^2)) //z^2 in sphere's equation for 2nd point
//#define z2sq (0)

#define proy1 (prodist)
#define proy2 (sqrt(y2sq)+prodist)
#define proy3 (proy2)
#define proy4 (prodist)
#define proy5 (-sqrt(y2sq)+prodist)
#define proy6 (proy5)

#define proz1 (prohght)
#define proz2 (-sqrt(z2sq)+prohght)
#define proz3 (proz2)
#define proz4 (prohght)
#define proz5 (sqrt(z2sq)+prohght)
#define proz6 (proz5)

//STILL NEED TO ADD WHATEVER NECESSARY FOR EASILY CONTROLING CONTACT ANGLE


//Constraints for Protein

constraint 1 //"cylinder" in which the protein is centered and on which it has outer edges on
formula: (yplane*prohght-yplane*z-zplane*prodist+zplane*y)^2+(zplane*x)^2+(yplane*x)^2=(prorad)^2*(yplane^2+zplane^2)

constraint 2 //plane that the base of protein is constrainted to
formula: yplane*(y-prodist) + zplane*(z-prohght) = 0

parameter flutey_count=3
constraint 3 //invisible flutes that prevent circle vertices of protein from "short-circuiting"
formula: sin(flutey_count*atan2(zplane*(y-prodist)-yplane*(z-prohght),x))


//any other constraints





Vertices

1 prox1 proy1 proz1 constraint 1,2,3
2 prox2 proy2 proz2 constraint 1,2,3
3 prox3 proy3 proz3 constraint 1,2,3
4 prox4 proy4 proz4 constraint 1,2,3
5 prox5 proy5 proz5 constraint 1,2,3
6 prox6 proy6 proz6 constraint 1,2,3

7  prox1 proy1+8*yplane proz1+8*zplane constraint 1,3 fixed
8  prox2 proy2+8*yplane proz2+8*zplane constraint 1,3 fixed
9  prox3 proy3+8*yplane proz3+8*zplane constraint 1,3 fixed
10 prox4 proy4+8*yplane proz4+8*zplane constraint 1,3 fixed
11 prox5 proy5+8*yplane proz5+8*zplane constraint 1,3 fixed
12 prox6 proy6+8*yplane proz6+8*zplane constraint 1,3 fixed


13 -30   0   0
14  30   0   0
15   0 -30   0
16   0  30   0
17   0   0 -30
18   0   0  30



Edges

//inner protein circle (ES1)
1   1  2 constraint 1,2,3
2   2  3 constraint 1,2,3
3   3  4 constraint 1,2,3
4   4  5 constraint 1,2,3
5   5  6 constraint 1,2,3
6   6  1 constraint 1,2,3

//making the "protein" cap
7   7  8 constraint 1,3 fixed// no_refine
8   8  9 constraint 1,3 fixed// no_refine
9   9 10 constraint 1,3 fixed// no_refine
10 10 11 constraint 1,3 fixed// no_refine
11 11 12 constraint 1,3 fixed// no_refine
12 12  7 constraint 1,3 fixed// no_refine
13  1  7 constraint 1,3 fixed// no_refine
14  2  8 constraint 1,3 fixed// no_refine
15  3  9 constraint 1,3 fixed// no_refine
16  4 10 constraint 1,3 fixed// no_refine
17  5 11 constraint 1,3 fixed// no_refine
18  6 12 constraint 1,3 fixed// no_refine

19 13 14 color(blue)
20 15 16 color(green)
21 17 18 color(red)


Faces

1 1 14  -7 -13 constraint 1 no_refine
2 2 15  -8 -14 constraint 1 no_refine
3 3 16  -9 -15 constraint 1 no_refine
4 4 17 -10 -16 constraint 1 no_refine
5 5 18 -11 -17 constraint 1 no_refine
6 6 13 -12 -18 constraint 1 no_refine


read

r :::= { /*flute_count *= 2;*/ flutey_count *= 2; 'r' }

